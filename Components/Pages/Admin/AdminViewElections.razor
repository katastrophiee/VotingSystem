@page "/admin-view-elections"

@if (Errors.Count() > 0)
{
    <ErrorPopup Errors="@Errors" />
}

<NavLink class="button-styled-nav-link" href="@($"add-election")">
    <span>@Localizer["AddElection"]</span>
</NavLink>

<div class="content-container">
    <EditForm Model="GetElectionsRequest" OnValidSubmit="async () => await FetchElections()">

        <div>
            <label for="taskId">@Localizer["ElectionId"]:</label>
            <InputNumber @bind-Value="GetElectionsRequest.ElectionId" id="taskId" />
        </div>

        <div>
            <label for="forVoterId">@Localizer["ElectionName"]:</label>
            <InputText @bind-Value="GetElectionsRequest.ElectionName" id="forVoterId" />
        </div>

        <div>
            <label for="forAdminId">@Localizer["StartDate"]:</label>
            <InputDate @bind-Value="GetElectionsRequest.StartDate" id="forAdminId" />
        </div>

        <div>
            <label for="name">@Localizer["EndDate"]:</label>
            <InputDate @bind-Value="GetElectionsRequest.EndDate" id="name" />
        </div>

        <div>
            <label for="taskStatus">@Localizer["UserCountry"]:</label>
            <InputSelect @bind-Value="GetElectionsRequest.Country" id="taskStatus">
                <option value="">-- @Localizer["Select"] --</option>
                @foreach (var status in Enum.GetValues(typeof(API.Enums.UserCountry)).Cast<API.Enums.TaskStatus>())
                {
                    <option value="@status">@status.LocalisedEnumDisplayName(Localizer)</option>
                }
            </InputSelect>
        </div>

        <div>
            <label for="taskStatus">@Localizer["ElectionType"]:</label>
            <InputSelect @bind-Value="GetElectionsRequest.ElectionType" id="taskStatus">
                <option value="">-- @Localizer["Select"] --</option>
                @foreach (var status in Enum.GetValues(typeof(API.Enums.ElectionType)).Cast<API.Enums.TaskStatus>())
                {
                    <option value="@status">@status.LocalisedEnumDisplayName(Localizer)</option>
                }
            </InputSelect>
        </div>

        <button type="submit">@Localizer["Search"]</button>
    </EditForm>
    <button @onclick=ClearSearch>@Localizer["Clear"]</button>
</div>

@if (Elections is not null && Elections.Count() != 0)
{
    <table>
        <tr>
            <th>@Localizer["Election"] ID</th>
            <th>@Localizer["Name"]</th>
            <th>@Localizer["StartDate"]</th>
            <th>@Localizer["EndDate"]</th>
            <th>@Localizer["UserCountry"]</th>
            <th>@Localizer["ElectionType"]</th>
            <th>@Localizer["CreatedAt"]</th>
            <th>@Localizer["Action"]</th>
        </tr>
        @foreach (var election in Elections)
        {
            <tr>
                <td>@election.ElectionId</td>
                <td>@election.ElectionName</td>
                <td>@election.ElectionDescription</td>
                <td>@election.StartDate</td>
                <td>@election.EndDate</td>
                <td>@election.Country.LocalisedEnumDisplayName(Localizer)</td>
                <td>@election.ElectionType.LocalisedEnumDisplayName(Localizer)</td>
                <td>
                    <NavLink class="button-styled-nav-link" href="@($"admin-view-election/electionId={election.ElectionId}")">
                        <span>@Localizer["View"]</span>
                    </NavLink>

                    <button class="button-styled-nav-link" @onclick="async () => await DeleteTask(election.ElectionId)">
                        <span>@Localizer["Delete"]</span>
                    </button>
                </td>
            </tr>
        }
    </table>
}
else if (Elections is not null && Elections.Count() == 0)
{
    <div class="content-container">
        @Localizer["NoElectionsFound"]
    </div>
}