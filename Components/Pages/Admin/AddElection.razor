@page "/add-election"

<h1>@Localizer["AddAnElection"]</h1>
@if (Errors.Count() > 0)
{
    <ErrorPopup Errors="@Errors" />
}
else if (AddElectionRequest == null)
{
    <h1><em>@Localizer["Loading"]</em></h1>
}
else
{
    <div class="content-container">
        <EditForm Model="AddElectionRequest" OnValidSubmit="async () => await HandleValidSubmit()" class="edit-form">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div>
                <label for="electionName">@Localizer["ElectionName"]:</label>
                <InputText id="electionName" @bind-Value="AddElectionRequest.ElectionName" placeholder=@Localizer["ElectionName"] />
            </div>

            <div>
                <label for="electionDescription">@Localizer["Desciption"]:</label>
                <InputTextArea id="electionDescription" @bind-Value="AddElectionRequest.ElectionDescription" placeholder=@Localizer["Desciption"] />
            </div>

            <InputDate id="startDate" @bind-Value="AddElectionRequest.StartDate" placeholder=@Localizer["StartDate"] />
            <InputDate id="endDate" @bind-Value="AddElectionRequest.EndDate" placeholder=@Localizer["StartDate"] />
            <InputSelect id="country" @bind-Value="AddElectionRequest.Country">
                @* TO DO - need to add validation once election types are added to only show appropriate types *@
                <option value="">@Localizer["SelectACountry"]</option>
                @foreach (var country in Enum.GetValues<UserCountry>())
                {
                    <option value="@country">@country.LocalisedEnumDisplayName(Localizer)</option>
                }
            </InputSelect>
            <InputSelect id="electionType" @bind-Value="AddElectionRequest.ElectionType">
                <option value="">@Localizer["SelectAnElectionType"]</option>
                @foreach (var type in Enum.GetValues<ElectionType>())
                {
                    <option value="@type">@type.LocalisedEnumDisplayName(Localizer)</option>
                }
            </InputSelect>

            <h3>@Localizer["AddElectionOption"]</h3>
            <div>
                <label for="candidateId">@Localizer["Candidate"] ID:</label>
                <input type="number" @bind-value="NewOption.CandidateId" @oninput="OnCandidateIdInput" />
            </div>
            <InputText id="optionName" @bind-Value="NewOption.OptionName" placeholder=@Localizer["OptionName"] />
            <InputTextArea id="optionDescription" @bind-Value="NewOption.OptionDescription" placeholder=@Localizer["OptionDescription"] />
            <button type="button" @onclick="async () => await AddOption()">@Localizer["AddOption"]</button>
            @if (ShowAddOptionError)
            {
                <div>@Localizer["CannotAddOptionNoCandidate"]</div>
            }
            @if (ShowOptionAlreadyAddedError)
            {
                <div>@Localizer["CannotAddOptionAlreadyAdded"]</div>
            }

            <h3>@Localizer["ElectionOptions"]</h3>
            @foreach (var option in AddElectionRequest.ElectionOptions)
            {
                <div>
                    <p>@option.OptionName</p>
                    <button type="button" @onclick="() => RemoveOption(option)">@Localizer["Remove"]</button>
                </div>
            }

            <button type="submit">@Localizer["Submit"]</button>
        </EditForm>
    </div>
}