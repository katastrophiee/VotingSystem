@page "/register"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Mvc.RazorPages
@using VotingSystem.API.DTO.ErrorHandling
@using VotingSystem.API.DTO.Requests
@using VotingSystem.Services
@inject NavigationManager NavigationManager
@inject ApiRequestService ApiRequestService
@inject ILocalStorageService _localStorage

<h3>Registration</h3>

<EditForm Model="@userModel" OnValidSubmit="async () => await HandleRegistration()">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="userModel.Username" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="userModel.Email" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" class="form-control" @bind-Value="userModel.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private CreateAccountRequest userModel = new CreateAccountRequest();

    private CreateAccountRequest RegisterModel = new CreateAccountRequest();
    private bool ShowErrors;
    private List<ErrorResponse> Errors;

    private async Task HandleRegistration()
    {
        var result = await ApiRequestService.PostCustomerCreateAccount(RegisterModel);

        if (result.Data > 0)
        {
            // await _localStorage.SetItemAsStringAsync("authToken", loginResponse.Data.AccessToken);
            await _localStorage.SetItemAsync("currentUserId", result.Data);
            NavigationManager.NavigateTo("");
        }
        else
        {
            //fix later
            Errors.Add(new());
        }
    }
}

