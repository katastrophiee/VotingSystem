@page "/register"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Mvc.RazorPages
@using VotingSystem.API.DTO.Requests
@inject NavigationManager NavigationManager

<h3>Registration</h3>

<EditForm Model="@userModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="userModel.Username" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="userModel.Email" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" class="form-control" @bind-Value="userModel.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private CreateAccountRequest userModel = new CreateAccountRequest();

    private void HandleValidSubmit()
    {
        // Handle the form submission here
    }

    private readonly SignInManager<IdentityUser> _signInManager;
    private readonly UserManager<IdentityUser> _userManager;

    public RegisterPage(SignInManager<IdentityUser> signInManager,
    UserManager<IdentityUser> userManager)
    {
        _signInManager = signInManager;
        _userManager = userManager;

    }

    public async void OnCreateUser()
    {
        var returnUrl = "";

        var identity = new IdentityUser { UserName = userModel.Username, Email = userModel.Email };
        var result = await _userManager.CreateAsync(identity, userModel.Password);

        if (result.Succeeded)
        {
            await _signInManager.SignInAsync(identity, isPersistent: false);
            NavigationManager.NavigateTo(returnUrl);
        }
    }
}

